$schema: "https://moonrepo.dev/schemas/tasks.json"

fileGroups:
  configs:
    - "*.{js,json}"

  sources:
    - "src/**/*"

  buildConfig:
    - "/.config/build.config.ts"

  tests:
    - "src/**/*.spec.*"

tasks:
  fixDependsOn:
    command: "omni fix moon dependsOn"
    deps: 
      - "utils-repo:build"
    inputs:
      - package.json
    outputs:
      - package.json
    options:
      cache: false
      runInCI: false

  debugPrint: 
    local: true
    options:
      cache: false
      runInCI: false
    script: "echo Yarn: $(yarn --version) Node: $(node --version)"

  build:
    command: "tsc -b tsconfig.build.json"
    type: build
    deps:
      - "root:init"
    inputs:
      - "@globs(sources)"
      - "@files(buildConfig)"
    outputs:
      - dist
    options:
      cache: true

  dev:
    command: "tsc -b tsconfig.build.json --watch"
    deps:
      - "root:init"
    inputs:
      - "@globs(sources)"
      - "@files(buildConfig)"
    outputs:
      - dist
    options:
      runInCI: false
      persistent: false

  testRaw:
    command: "moon root:testWorkspace"
    args: 
      - --
      - --project 
      - $VITEST_PROJECT
    type: test
    inputs:
      - "@globs(sources)"
    deps: 
      - "~:build"
    options:
      internal: true
      envFile: '.env'

  test:
    extends: testRaw
    args:
      - --run
    options:
      internal: false
      persistent: false

  testDev:
    extends: testRaw
    options:
      internal: false
      runInCI: false
      cache: false
      persistent: true

  testUi:
    extends: testRaw
    args: 
      - --ui
    options:
      internal: false
      runInCI: false
      cache: false
      persistent: true

  lint:
    command: "eslint"
    type: test
    deps:
      - "~:build"
      - "eslint-config:build"
    inputs:
      - "@globs(sources)"

  publish:
    command: "yarn npm publish --tolerate-republish"
    deps:
      - "~:build"
    inputs:
      - "@globs(sources)"
    options:
      runInCI: false