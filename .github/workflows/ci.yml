name: 'CI Pipeline'

on:
  push:
  pull_request:
  workflow_dispatch: 

jobs:
  ci:
    name: 'CI'
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout Repo
        uses: 'actions/checkout@v3'
        with:
          fetch-depth: 0

      - name: "Check if versioning is required"
        uses: andstor/file-existence-action@v2
        id: check_versioning
        with:
          files: ".yarn/versions/*"

      - name: Setup Environment
        uses: 'actions/setup-node@v3'
        with:
          cache: 'yarn'

      - name: Install Dependencies
        run: 'yarn install --immutable'

      - name: Run CI Tasks
        run: 'yarn moon ci'
        env:
          MOONBASE_SECRET_KEY: ${{ secrets.MOONBASE_SECRET_KEY }}
          MOONBASE_ACCESS_KEY: ${{ secrets.MOONBASE_ACCESS_KEY }}

      - name: Report Moon CI Status
        uses: 'moonrepo/run-report-action@v1'
        if: success() || failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}

  versioning: 
    name: "Versioning"
    runs-on: 'ubuntu-latest'
    needs: ci
    if: needs.ci.steps.check_versioning.outputs.files_exists == 'true'
    steps:
      - name: Checkout Repo
        uses: 'actions/checkout@v3'

      - name: Setup Environment
        uses: 'actions/setup-node@v3'
        with:
          cache: 'yarn'

      - name: Install Dependencies
        run: 'yarn install --immutable'

      - name: Run setup
        run: 'yarn moon run :build'


  coverage: 
    name: 'Coverage'
    runs-on: 'ubuntu-latest'
    needs: ci
    steps:
      - name: Checkout Repo
        uses: 'actions/checkout@v3'
        with: 

      - name: Setup Environment
        uses: 'actions/setup-node@v3'
        with:
          cache: 'yarn'

      - name: Install Dependencies
        run: 'yarn install --immutable'

      - name: Run setup
        run: 'yarn moon run :build'

      - name: Run Coverage
        run: 'yarn coverage'

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        with: 
          directory: coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true